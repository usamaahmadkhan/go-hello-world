---
# Source: go-hello-world/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: go-hello-world
  labels:
    helm.sh/chart: go-hello-world-0.0.1
    app.kubernetes.io/name: go-hello-world
    app.kubernetes.io/instance: go-hello-world
    app.kubernetes.io/managed-by: Helm
---
# Source: go-hello-world/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: go-hello-world
  labels:
    helm.sh/chart: go-hello-world-0.0.1
    app.kubernetes.io/name: go-hello-world
    app.kubernetes.io/instance: go-hello-world
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: go-hello-world
    app.kubernetes.io/instance: go-hello-world
---
# Source: go-hello-world/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-hello-world
  labels:
    helm.sh/chart: go-hello-world-0.0.1
    app.kubernetes.io/name: go-hello-world
    app.kubernetes.io/instance: go-hello-world
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: go-hello-world
      app.kubernetes.io/instance: go-hello-world
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go-hello-world
        app.kubernetes.io/instance: go-hello-world
    spec:
      serviceAccountName: go-hello-world
      securityContext:
        {}
      containers:
        - name: go-hello-world
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.io/usamaahmadkhan/go-hello-world:"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - go-hello-world
            topologyKey: kubernetes.io/hostname
